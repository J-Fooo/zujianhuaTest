apply plugin: 'com.android.application'

android {
    compileSdkVersion getRootProject().ext.app_android.compileSdkVersion
    buildToolsVersion rootProject.ext.app_android.buildToolsVersion
    defaultConfig {
        applicationId "com.test.zujianhuatest"
        minSdkVersion app_android.minSdkVersion
        targetSdkVersion app_android.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 在gradle文件中配置选项参数值（用于APT传参接收）
        // 必须写在defaultConfig节点下
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName(), packageNameForAPT: packageNameForAPT]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation app_impl.appcompat
    implementation app_impl.constraintlayout
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation app_impl.junit
    androidTestImplementation app_impl.test_junit
    androidTestImplementation app_impl.espresso_core

    implementation project(':common') // 依赖公共基础库

    if (isRelease) {
//        组件化环境依赖组件库

        implementation project(':order')
        implementation project(':personal')
        implementation project(':annotation')
        annotationProcessor project(':compiler')
    }
}
